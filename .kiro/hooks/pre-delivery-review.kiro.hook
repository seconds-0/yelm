{
  "enabled": true,
  "name": "Pre-Delivery Critical Review",
  "description": "Conduct adversarial self-review before marking any task complete",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "You are about to complete a task or declare work finished. Before proceeding, you MUST conduct a critical self-review by adopting an adversarial mindset. Act as a hostile reviewer whose job is to find problems with your work.\n\n## Critical Review Process\n\n**Completeness Review:**\n1. Did I actually complete ALL the stated requirements?\n2. Are there any sub-tasks or deliverables I missed?\n3. What would a perfectionist critic say is missing?\n4. Did I take any shortcuts that compromise quality?\n\n**Quality Review:**\n5. Is this code/solution production-ready or just a prototype?\n6. What are the most likely failure modes I didn't address?\n7. Where did I make assumptions that might be wrong?\n8. What edge cases did I ignore?\n\n**Requirements Alignment:**\n9. Does this actually solve the original problem stated?\n10. Did I drift from the requirements during implementation?\n11. Would the end user be satisfied with this deliverable?\n12. What requirements did I interpret too loosely?\n\n**Technical Review:**\n13. What are the biggest technical risks in this approach?\n14. Where is this solution most likely to break?\n15. What performance or scalability issues did I ignore?\n16. Is this maintainable by someone else?\n\n## Review Output Required\n\nProvide a detailed review addressing each category above, then conclude with:\n\n- **Critical Issues**: [Issues that must be fixed before completion]\n- **Major Issues**: [Issues that should be addressed]\n- **Minor Issues**: [Suggestions for improvement]\n- **Remaining Risks**: [Clearly document limitations]\n- **Conclusion**: Ready for delivery OR Needs more work\n\nOnly proceed with task completion after addressing all critical issues identified in this review."
  }
}
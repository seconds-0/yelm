<?xml version="1.0" encoding="UTF-8" ?>
<testsuites name="vitest tests" tests="675" failures="0" errors="0" time="8.923522792">
    <testsuite name="src/nonInteractiveCli.test.ts" timestamp="2025-07-17T20:01:51.790Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.006878917">
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should process input and write text output" time="0.003517833">
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should handle a single tool call and respond" time="0.00097625">
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should handle error during tool execution" time="0.000532792">
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should exit with error if sendMessageStream throws initially" time="0.000340041">
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should not exit if a tool is not found, and should send error back to model" time="0.000439625">
        </testcase>
        <testcase classname="src/nonInteractiveCli.test.ts" name="runNonInteractive &gt; should exit when max session turns are exceeded" time="0.000264834">
        </testcase>
    </testsuite>
    <testsuite name="src/yelm.test.tsx" timestamp="2025-07-17T20:01:51.790Z" hostname="Alexanders-MacBook-Pro.local" tests="1" failures="0" errors="0" skipped="0" time="0.003523792">
        <testcase classname="src/yelm.test.tsx" name="gemini.tsx main function &gt; should call process.exit(1) if settings have errors" time="0.002804708">
        </testcase>
    </testsuite>
    <testsuite name="src/config/auth.test.ts" timestamp="2025-07-17T20:01:51.790Z" hostname="Alexanders-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.002698917">
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return null for LOGIN_WITH_GOOGLE" time="0.000982584">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return null for CLOUD_SHELL" time="0.000220625">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_GEMINI &gt; should return null if GEMINI_API_KEY is set" time="0.000176625">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_GEMINI &gt; should return an error message if GEMINI_API_KEY is not set" time="0.000183208">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return null if GOOGLE_CLOUD_PROJECT and GOOGLE_CLOUD_LOCATION are set" time="0.000173875">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return null if GOOGLE_API_KEY is set" time="0.000092042">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; USE_VERTEX_AI &gt; should return an error message if no required environment variables are set" time="0.000086208">
        </testcase>
        <testcase classname="src/config/auth.test.ts" name="validateAuthMethod &gt; should return an error message for an invalid auth method" time="0.000077792">
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.integration.test.ts" timestamp="2025-07-17T20:01:51.791Z" hostname="Alexanders-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.022311209">
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should load default file filtering settings" time="0.012306166">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should load custom file filtering settings from configuration" time="0.001256667">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; File Filtering Configuration &gt; should merge user and workspace file filtering settings" time="0.001102375">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle partial configuration objects gracefully" time="0.000914042">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle empty configuration objects gracefully" time="0.000855625">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Configuration Integration &gt; should handle missing configuration sections gracefully" time="0.000553625">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Real-world Configuration Scenarios &gt; should handle a security-focused configuration" time="0.000454041">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Real-world Configuration Scenarios &gt; should handle a CI/CD environment configuration" time="0.00083">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Checkpointing Configuration &gt; should enable checkpointing when the setting is true" time="0.001671209">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Extension Context Files &gt; should have an empty array for extension context files by default" time="0.000867292">
        </testcase>
        <testcase classname="src/config/config.integration.test.ts" name="Configuration Integration Tests &gt; Extension Context Files &gt; should correctly store and return extension context file paths" time="0.000481583">
        </testcase>
    </testsuite>
    <testsuite name="src/config/config.test.ts" timestamp="2025-07-17T20:01:51.791Z" hostname="Alexanders-MacBook-Pro.local" tests="52" failures="0" errors="0" skipped="0" time="0.141653917">
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should throw an error when both --prompt and --prompt-interactive are used together" time="0.012167334">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should throw an error when using short flags -p and -i together" time="0.003395542">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow --prompt without --prompt-interactive" time="0.001283208">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow --prompt-interactive without --prompt" time="0.000888459">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="parseArguments &gt; should allow -i flag as alias for --prompt-interactive" time="0.001559875">
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to true when --show-memory-usage flag is present" time="0.018732084">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:163:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to false when --memory flag is not present" time="0.002154666">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:171:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should set showMemoryUsage to false by default from settings if CLI flag is not present" time="0.001641042">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:179:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig &gt; should prioritize CLI flag over settings for showMemoryUsage (CLI true, settings false)" time="0.002170375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:187:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to false by default when no flag or setting is present" time="0.002988875">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:212:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to true when --telemetry flag is present" time="0.0090045">
            <system-out>
OpenTelemetry SDK started successfully.

            </system-out>
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:220:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}
Accessing resource attributes before async attributes settled

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should set telemetry to false when --no-telemetry flag is present" time="0.001972">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:228:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry value from settings if CLI flag is not present (settings true)" time="0.001824667">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:236:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry value from settings if CLI flag is not present (settings false)" time="0.002540375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:244:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry CLI flag (true) over settings (false)" time="0.002512083">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:252:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --no-telemetry CLI flag (false) over settings (true)" time="0.001570667">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:260:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry OTLP endpoint from settings if CLI flag is not present" time="0.001574625">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:270:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-otlp-endpoint CLI flag over settings" time="0.001470208">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:287:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default endpoint if no OTLP endpoint is provided via CLI or settings" time="0.001356917">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:295:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry target from settings if CLI flag is not present" time="0.001298625">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:305:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-target CLI flag over settings" time="0.009748166">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:317:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default target if no target is provided via CLI or settings" time="0.007139958">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:325:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use telemetry log prompts from settings if CLI flag is not present" time="0.001975667">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:335:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --telemetry-log-prompts CLI flag (true) over settings (false)" time="0.001753833">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:343:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should prioritize --no-telemetry-log-prompts CLI flag (false) over settings (true)" time="0.001806416">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:351:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig telemetry &gt; should use default log prompts (true) if no value is provided via CLI or settings" time="0.0024365">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:359:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="Hierarchical Memory Loading (config.ts) - Placeholder Suite &gt; should pass extension context file paths to loadServerHierarchicalMemory" time="0.002350125">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:405:5
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeMcpServers &gt; should not modify the original settings object" time="0.001798167">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:467:5
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should merge excludeTools from settings and extensions" time="0.001738291">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:495:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle overlapping excludeTools between settings and extensions" time="0.001322542">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:521:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle overlapping excludeTools between extensions" time="0.001249792">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:555:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should return an empty array when no excludeTools are specified" time="0.003536542">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:572:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle settings with excludeTools but no extensions" time="0.001772208">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:586:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should handle extensions with excludeTools but no settings" time="0.002438375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:612:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="mergeExcludeTools &gt; should not modify the original settings object" time="0.001620875">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:639:5
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow all MCP servers if the flag is not provided" time="0.001918667">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:671:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow only the specified MCP server" time="0.001620042">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:683:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow multiple specified MCP servers" time="0.00133125">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:699:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should handle server names that do not exist" time="0.001392917">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:716:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig with allowed-mcp-server-names &gt; should allow no MCP servers if the flag is provided but empty" time="0.001552375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:725:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig extensions &gt; should not filter extensions if --extensions flag is not used" time="0.001523167">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:746:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig extensions &gt; should filter extensions if --extensions flag is used" time="0.001437209">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2

            </system-out>
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:762:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false by default" time="0.001258">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:795:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false if --ide-mode is true but TERM_PROGRAM is not vscode" time="0.001301458">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:803:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false if settings.ideMode is true but TERM_PROGRAM is not vscode" time="0.001229042">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:811:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be true when --ide-mode is set and TERM_PROGRAM is vscode" time="0.001309167">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:820:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be true when settings.ideMode is true and TERM_PROGRAM is vscode" time="0.001235917">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:829:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should prioritize --ide-mode (true) over settings (false) when TERM_PROGRAM is vscode" time="0.002780542">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:838:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should prioritize --no-ide-mode (false) over settings (true) even when TERM_PROGRAM is vscode" time="0.001583375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:847:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false when --ide-mode is true, TERM_PROGRAM is vscode, but SANDBOX is set" time="0.001348333">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:857:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should be false when settings.ideMode is true, TERM_PROGRAM is vscode, but SANDBOX is set" time="0.001253125">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:867:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/config/config.test.ts" name="loadCliConfig ideMode &gt; should add __ide_server when ideMode is true" time="0.001324375">
            <system-err>
Error accessing installation ID file, generating ephemeral ID: Error: ENOENT: no such file or directory, mkdir &apos;/mock/home/user/.gemini&apos;
[90m    at Proxy.mkdirSync (node:fs:1361:26)[39m
    at ensureGeminiDirExists (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:19:8)
    at getInstallationId (/Users/alexanderhuth/Code/yelm/packages/core/src/utils/user_id.ts:42:5)
    at ClearcutLogger.createLogEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:94:53)
    at ClearcutLogger.logStartSessionEvent (/Users/alexanderhuth/Code/yelm/packages/core/src/telemetry/clearcut-logger/clearcut-logger.ts:269:31)
    at new Config (/Users/alexanderhuth/Code/yelm/packages/core/src/config/config.ts:250:41)
    at Module.loadCliConfig [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.ts:307:10[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/config/config.test.ts:876:20
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/mock/home/user/.gemini&apos;[39m
}

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/config/extension.test.ts" timestamp="2025-07-17T20:01:51.796Z" hostname="Alexanders-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.008848041">
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path when agents.md is present" time="0.003949917">
            <system-out>
Loading extension: ext1 (version: 1.0.0)
Loading extension: ext2 (version: 2.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="loadExtensions &gt; should load context file path from the extension config" time="0.001811459">
            <system-out>
Loading extension: ext1 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return all extensions if no enabled extensions are provided" time="0.000179584">
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return only the enabled extensions" time="0.00042075">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Activated extension: ext3 (version: 1.0.0)

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should return no extensions when &quot;none&quot; is provided" time="0.000188792">
            <system-out>
All extensions are disabled.

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should handle case-insensitivity" time="0.00038525">
            <system-out>
Activated extension: ext1 (version: 1.0.0)
Disabled extension: ext2
Disabled extension: ext3

            </system-out>
        </testcase>
        <testcase classname="src/config/extension.test.ts" name="filterActiveExtensions &gt; should log an error for unknown extensions" time="0.001023083">
        </testcase>
    </testsuite>
    <testsuite name="src/config/settings.test.ts" timestamp="2025-07-17T20:01:51.796Z" hostname="Alexanders-MacBook-Pro.local" tests="25" failures="0" errors="0" skipped="0" time="0.013791791">
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load empty settings if no files exist" time="0.001972542">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load system settings if only system file exists" time="0.00117975">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load user settings if only user file exists" time="0.000398083">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load workspace settings if only workspace file exists" time="0.000279625">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should merge user and workspace settings, with workspace taking precedence" time="0.000827458">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should merge system, user and workspace settings, with system taking precedence over workspace, and workspace over user" time="0.000324375">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle contextFileName correctly when only in user settings" time="0.000208667">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle contextFileName correctly when only in workspace settings" time="0.000192417">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should default contextFileName to undefined if not in any settings file" time="0.00042425">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load telemetry setting from user settings" time="0.0002485">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should load telemetry setting from workspace settings" time="0.000200084">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize workspace telemetry setting over user setting" time="0.000226916">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should have telemetry as undefined if not in any settings file" time="0.000174125">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should handle JSON parsing errors gracefully" time="0.001222583">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in user settings" time="0.000289042">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in workspace settings" time="0.000227208">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize user env variables over workspace env variables if keys clash after resolution" time="0.0002485">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize workspace env variables over user env variables if keys clash after resolution" time="0.000314917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should prioritize system env variables over workspace env variables if keys clash after resolution" time="0.00021675">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should leave unresolved environment variables as is" time="0.000185917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve multiple environment variables in a single string" time="0.000178917">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve environment variables in arrays" time="0.000333">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should correctly pass through null, boolean, and number types, and handle undefined properties" time="0.000343792">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; loadSettings &gt; should resolve multiple concatenated environment variables in a single string value" time="0.000230542">
        </testcase>
        <testcase classname="src/config/settings.test.ts" name="Settings Loading and Merging &gt; LoadedSettings class &gt; setValue should update the correct scope and recompute merged settings" time="0.000975958">
        </testcase>
    </testsuite>
    <testsuite name="src/services/CommandService.test.ts" timestamp="2025-07-17T20:01:51.797Z" hostname="Alexanders-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.003509542">
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; should initialize with an empty command tree" time="0.000880208">
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; loadCommands &gt; should load the built-in commands into the command tree" time="0.000617042">
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; loadCommands &gt; should overwrite any existing commands when called again" time="0.000095209">
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when using default production loader &gt; getCommandTree &gt; should return the current command tree" time="0.000354625">
        </testcase>
        <testcase classname="src/services/CommandService.test.ts" name="CommandService &gt; when initialized with an injected loader function &gt; should use the provided loader instead of the built-in one" time="0.000722333">
        </testcase>
    </testsuite>
    <testsuite name="src/test-utils/mockCommandContext.test.ts" timestamp="2025-07-17T20:01:51.797Z" hostname="Alexanders-MacBook-Pro.local" tests="3" failures="0" errors="0" skipped="0" time="0.003594459">
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should return a valid CommandContext object with default mocks" time="0.001381667">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply top-level overrides correctly" time="0.000513375">
        </testcase>
        <testcase classname="src/test-utils/mockCommandContext.test.ts" name="createMockCommandContext &gt; should apply deeply nested overrides correctly" time="0.00022475">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/App.test.tsx" timestamp="2025-07-17T20:01:51.798Z" hostname="Alexanders-MacBook-Pro.local" tests="16" failures="0" errors="0" skipped="0" time="0.188157042">
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display default &quot;GEMINI.md&quot; in footer when contextFileName is not set and count is 1" time="0.02692675">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display default &quot;GEMINI.md&quot; with plural when contextFileName is not set and count is &gt; 1" time="0.00473775">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display custom contextFileName in footer when set and count is 1" time="0.008108083">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display a generic message when multiple context files with different names are provided" time="0.005376416">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display custom contextFileName with plural when set and count is &gt; 1" time="0.007103083">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display context file message if count is 0, even if contextFileName is set" time="0.006426542">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display GEMINI.md and MCP server count when both are present" time="0.006087292">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display only MCP server count when GEMINI.md count is 0" time="0.004664125">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display Tips component by default" time="0.006790625">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display Tips component when hideTips is true" time="0.028373792">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should display Header component by default" time="0.006019709">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should not display Header component when hideBanner is true" time="0.014106417">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; should show tips if system says show, but workspace and user settings say hide" time="0.017276583">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; when no theme is set &gt; should display theme dialog if NO_COLOR is not set" time="0.014919333">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; when no theme is set &gt; should display a message if NO_COLOR is set" time="0.008669542">
        </testcase>
        <testcase classname="src/ui/App.test.tsx" name="App UI &gt; with initial prompt from --prompt-interactive &gt; should submit the initial prompt automatically" time="0.021224833">
        </testcase>
    </testsuite>
    <testsuite name="src/utils/startupWarnings.test.ts" timestamp="2025-07-17T20:01:51.798Z" hostname="Alexanders-MacBook-Pro.local" tests="4" failures="0" errors="0" skipped="4" time="0">
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return warnings from the file and delete it" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return an empty array if the file does not exist" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return an error message if reading the file fails" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/utils/startupWarnings.test.ts" name="startupWarnings &gt; should return a warning if deleting the file fails" time="0">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/utils/userStartupWarnings.test.ts" timestamp="2025-07-17T20:01:51.799Z" hostname="Alexanders-MacBook-Pro.local" tests="3" failures="0" errors="0" skipped="0" time="0.004228417">
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should return a warning when running in home directory" time="0.00173025">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should not return a warning when running in a project directory" time="0.000413084">
        </testcase>
        <testcase classname="src/utils/userStartupWarnings.test.ts" name="getUserStartupWarnings &gt; home directory check &gt; should handle errors when checking directory" time="0.00078825">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/authCommand.test.ts" timestamp="2025-07-17T20:01:51.799Z" hostname="Alexanders-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.002559875">
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should return a dialog action to open the auth dialog" time="0.001562792">
        </testcase>
        <testcase classname="src/ui/commands/authCommand.test.ts" name="authCommand &gt; should have the correct name and description" time="0.000427791">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/clearCommand.test.ts" timestamp="2025-07-17T20:01:51.799Z" hostname="Alexanders-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.003246625">
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should set debug message, reset chat, and clear UI when config is available" time="0.002111">
        </testcase>
        <testcase classname="src/ui/commands/clearCommand.test.ts" name="clearCommand &gt; should not attempt to reset chat if config service is not available" time="0.000565">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/helpCommand.test.ts" timestamp="2025-07-17T20:01:51.799Z" hostname="Alexanders-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.002579666">
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should return a dialog action and log a debug message for &apos;/help&apos;" time="0.001801834">
        </testcase>
        <testcase classname="src/ui/commands/helpCommand.test.ts" name="helpCommand &gt; should also be triggered by its alternative name &apos;?&apos;" time="0.000223333">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/memoryCommand.test.ts" timestamp="2025-07-17T20:01:51.799Z" hostname="Alexanders-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.007345708">
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory show &gt; should display a message if memory is empty" time="0.002431334">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory show &gt; should display the memory content and file count if it exists" time="0.000290958">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory add &gt; should return an error message if no arguments are provided" time="0.000317">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory add &gt; should return a tool action and add an info message when arguments are provided" time="0.000274583">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display success message when memory is refreshed with content" time="0.000438375">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display success message when memory is refreshed with no content" time="0.000142">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should display an error message if refreshing fails" time="0.001620209">
        </testcase>
        <testcase classname="src/ui/commands/memoryCommand.test.ts" name="memoryCommand &gt; /memory refresh &gt; should not throw if config service is unavailable" time="0.000961167">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/commands/themeCommand.test.ts" timestamp="2025-07-17T20:01:51.800Z" hostname="Alexanders-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.002817333">
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should return a dialog action to open the theme dialog" time="0.001551792">
        </testcase>
        <testcase classname="src/ui/commands/themeCommand.test.ts" name="themeCommand &gt; should have the correct name and description" time="0.000421125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/contexts/SessionContext.test.tsx" timestamp="2025-07-17T20:01:51.800Z" hostname="Alexanders-MacBook-Pro.local" tests="3" failures="0" errors="0" skipped="0" time="0.024336875">
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionStatsContext &gt; should provide the correct initial state" time="0.008695375">
            <system-err>
An update to Root inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to SessionStatsProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionStatsContext &gt; should update metrics when the uiTelemetryService emits an update" time="0.002386959">
            <system-err>
An update to Root inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
An update to SessionStatsProvider inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act
`ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.

            </system-err>
        </testcase>
        <testcase classname="src/ui/contexts/SessionContext.test.tsx" name="SessionStatsContext &gt; should throw an error when useSessionStats is used outside of a provider" time="0.012447833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/AuthDialog.test.tsx" timestamp="2025-07-17T20:01:51.800Z" hostname="Alexanders-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.355213625">
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should show an error if the initial auth type is invalid" time="0.016900208">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_API_KEY environment variable &gt; should detect GEMINI_API_KEY environment variable" time="0.003610209">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_API_KEY environment variable &gt; should not show the GEMINI_API_KEY message if GEMINI_DEFAULT_AUTH_TYPE is set to something else" time="0.005145125">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_API_KEY environment variable &gt; should show the GEMINI_API_KEY message if GEMINI_DEFAULT_AUTH_TYPE is set to use api key" time="0.003057875">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_DEFAULT_AUTH_TYPE environment variable &gt; should select the auth type specified by GEMINI_DEFAULT_AUTH_TYPE" time="0.002217">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_DEFAULT_AUTH_TYPE environment variable &gt; should fall back to default if GEMINI_DEFAULT_AUTH_TYPE is not set" time="0.001745583">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; GEMINI_DEFAULT_AUTH_TYPE environment variable &gt; should show an error and fall back to default if GEMINI_DEFAULT_AUTH_TYPE is invalid" time="0.0034565">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should prevent exiting when no auth method is selected and show error message" time="0.108653542">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should not exit if there is already an error message" time="0.103922291">
        </testcase>
        <testcase classname="src/ui/components/AuthDialog.test.tsx" name="AuthDialog &gt; should allow exiting when auth method is already selected" time="0.105562334">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/HistoryItemDisplay.test.tsx" timestamp="2025-07-17T20:01:51.800Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.038586167">
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders UserMessage for &quot;user&quot; type" time="0.017011167">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders StatsDisplay for &quot;stats&quot; type" time="0.006200125">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders AboutBox for &quot;about&quot; type" time="0.002987416">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders ModelStatsDisplay for &quot;model_stats&quot; type" time="0.004695625">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders ToolStatsDisplay for &quot;tool_stats&quot; type" time="0.001271041">
        </testcase>
        <testcase classname="src/ui/components/HistoryItemDisplay.test.tsx" name="&lt;HistoryItemDisplay /&gt; &gt; renders SessionSummaryDisplay for &quot;quit&quot; type" time="0.005659167">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/InputPrompt.test.tsx" timestamp="2025-07-17T20:01:51.801Z" hostname="Alexanders-MacBook-Pro.local" tests="20" failures="0" errors="0" skipped="0" time="2.21679425">
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.getPreviousCommand on up arrow in shell mode" time="0.118322583">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.getNextCommand on down arrow in shell mode" time="0.103358458">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should set the buffer text when a shell history command is retrieved" time="0.104279625">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should call shellHistory.addCommandToHistory on submit in shell mode" time="0.104095834">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should NOT call shell history methods when not in shell mode" time="0.20769">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle Ctrl+V when clipboard has an image" time="0.105819125">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should not insert anything when clipboard has no image" time="0.104554917">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle image save failure gracefully" time="0.103131084">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should insert image path at cursor position with proper spacing" time="0.105760833">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; clipboard image paste &gt; should handle errors during clipboard operations" time="0.105940083">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a partial parent command and add a space" time="0.106365292">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should append a sub-command when the parent command is already complete with a space" time="0.106045125">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should handle the &quot;backspace&quot; edge case correctly" time="0.104371958">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a partial argument for a command" time="0.104448">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should autocomplete on Enter when suggestions are active, without submitting" time="0.104528708">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should complete a command based on its altName" time="0.105397792">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should not submit on Enter when the buffer is empty or only contains whitespace" time="0.104292125">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should submit directly on Enter when a complete leaf command is typed" time="0.105612417">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should autocomplete an @-path on Enter without submitting" time="0.105610208">
        </testcase>
        <testcase classname="src/ui/components/InputPrompt.test.tsx" name="InputPrompt &gt; should add a newline on enter when the line ends with a backslash" time="0.1055145">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/LoadingIndicator.test.tsx" timestamp="2025-07-17T20:01:51.802Z" hostname="Alexanders-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.035337083">
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should not render when streamingState is Idle" time="0.009536667">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner, phrase, and time when streamingState is Responding" time="0.005150042">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render spinner (static), phrase but no time/cancel when streamingState is WaitingForConfirmation" time="0.001967541">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the currentLoadingPhrase correctly" time="0.000963375">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly when Responding" time="0.001050542">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the elapsedTime correctly in human-readable format" time="0.000935916">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should render rightContent when provided" time="0.000738833">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should transition correctly between states using rerender" time="0.004889417">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display fallback phrase if thought is empty" time="0.004883459">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should display the subject of a thought" time="0.000872542">
        </testcase>
        <testcase classname="src/ui/components/LoadingIndicator.test.tsx" name="&lt;LoadingIndicator /&gt; &gt; should prioritize thought.subject over currentLoadingPhrase" time="0.002849792">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ModelStatsDisplay.test.tsx" timestamp="2025-07-17T20:01:51.802Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.046973959">
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should render &quot;no API calls&quot; message when there are no active models" time="0.01123375">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should not display conditional rows if no model has data for them" time="0.009121208">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display conditional rows if at least one model has data" time="0.006839333">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display stats for multiple models correctly" time="0.008868208">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should handle large values without wrapping or overlapping" time="0.003537625">
        </testcase>
        <testcase classname="src/ui/components/ModelStatsDisplay.test.tsx" name="&lt;ModelStatsDisplay /&gt; &gt; should display a single model correctly" time="0.00646225">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/SessionSummaryDisplay.test.tsx" timestamp="2025-07-17T20:01:51.802Z" hostname="Alexanders-MacBook-Pro.local" tests="1" failures="0" errors="0" skipped="0" time="0.030916875">
        <testcase classname="src/ui/components/SessionSummaryDisplay.test.tsx" name="&lt;SessionSummaryDisplay /&gt; &gt; renders the summary display with a title" time="0.02999025">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/StatsDisplay.test.tsx" timestamp="2025-07-17T20:01:51.802Z" hostname="Alexanders-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.066820458">
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders only the Performance section in its zero state" time="0.017349375">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders a table with two models correctly" time="0.00823475">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; renders all sections when all data is present" time="0.011888625">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Rendering Tests &gt; hides User Agreement when no decisions are made" time="0.002570625">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Rendering Tests &gt; hides Efficiency section when cache is not used" time="0.004159667">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in green for high values" time="0.005854417">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in yellow for medium values" time="0.004412333">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Conditional Color Tests &gt; renders success rate in red for low values" time="0.002290875">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Title Rendering &gt; renders the default title when no title prop is provided" time="0.002970709">
        </testcase>
        <testcase classname="src/ui/components/StatsDisplay.test.tsx" name="&lt;StatsDisplay /&gt; &gt; Title Rendering &gt; renders the custom title when a title prop is provided" time="0.006099458">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/ToolStatsDisplay.test.tsx" timestamp="2025-07-17T20:01:51.803Z" hostname="Alexanders-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.031130958">
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should render &quot;no tool calls&quot; message when there are no active tools" time="0.011771333">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should display stats for a single tool correctly" time="0.00574375">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should display stats for multiple tools correctly" time="0.005756166">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should handle large values without wrapping or overlapping" time="0.003744167">
        </testcase>
        <testcase classname="src/ui/components/ToolStatsDisplay.test.tsx" name="&lt;ToolStatsDisplay /&gt; &gt; should handle zero decisions gracefully" time="0.003288708">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/atCommandProcessor.test.ts" timestamp="2025-07-17T20:01:51.803Z" hostname="Alexanders-MacBook-Pro.local" tests="17" failures="0" errors="0" skipped="0" time="0.0123125">
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should pass through query if no @ command is present" time="0.002631875">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should pass through original query if only a lone @ symbol is present" time="0.000525792">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid text file path" time="0.0015935">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid directory path and convert to glob" time="0.000547792">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a valid image file path (as text content for now)" time="0.000219">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle query with text before and after @command" time="0.000215042">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should correctly unescape paths with escaped spaces" time="0.000486041">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle multiple @file references" time="0.000427375">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle multiple @file references with interleaved text" time="0.000589708">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should handle a mix of valid, invalid, and lone @ references" time="0.000575959">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should return original query if all @paths are invalid or lone @" time="0.001411167">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; should process a file path case-insensitively" time="0.000673417">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should skip git-ignored files in @ commands" time="0.0003015">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should process non-git-ignored files normally" time="0.000414625">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should handle mixed git-ignored and valid files" time="0.000414542">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; git-aware filtering &gt; should always ignore .git directory files" time="0.000189208">
        </testcase>
        <testcase classname="src/ui/hooks/atCommandProcessor.test.ts" name="handleAtCommand &gt; when recursive file search is disabled &gt; should not use glob search for a nonexistent file" time="0.000214042">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/shellCommandProcessor.test.ts" timestamp="2025-07-17T20:01:51.804Z" hostname="Alexanders-MacBook-Pro.local" tests="3" failures="0" errors="0" skipped="0" time="0.016780958">
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should execute a command and update history on success" time="0.009877333">
        </testcase>
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should handle binary output" time="0.003721167">
        </testcase>
        <testcase classname="src/ui/hooks/shellCommandProcessor.test.ts" name="useShellCommandProcessor &gt; should handle command failure" time="0.002289334">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/slashCommandProcessor.test.ts" timestamp="2025-07-17T20:01:51.804Z" hostname="Alexanders-MacBook-Pro.local" tests="32" failures="0" errors="0" skipped="0" time="0.41984225">
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /stats command &gt; should show detailed session statistics" time="0.010705583">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /stats command &gt; should show model-specific statistics when using /stats model" time="0.001449916">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /stats command &gt; should show tool-specific statistics when using /stats tools" time="0.0019935">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /about command &gt; should show the about box with all details including auth and project" time="0.00152625">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /about command &gt; should show sandbox-exec profile when applicable" time="0.002695958">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; Other commands &gt; /editor should open editor dialog and return handled" time="0.001380667">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should execute a command from the new registry" time="0.053152125">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should return &quot;schedule_tool&quot; when a new command returns a tool action" time="0.053433708">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should return &quot;handled&quot; when a new command returns a message action" time="0.053630458">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should return &quot;handled&quot; when a new command returns a dialog action" time="0.051553833">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should open the auth dialog when a new command returns an auth dialog action" time="0.051874708">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should open the theme dialog when a new command returns a theme dialog action" time="0.051421208">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; New command registry &gt; should show help for a parent command with no action" time="0.05243725">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /bug command &gt; should call open with the correct GitHub issue URL and return true" time="0.002022792">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /bug command &gt; should use the custom bug command URL from config if available" time="0.001354709">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /quit and /exit commands &gt; should handle /quit, set quitting messages, and exit the process" time="0.002635875">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /quit and /exit commands &gt; should handle /exit, set quitting messages, and exit the process" time="0.001639292">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; Unknown command &gt; should show an error and return handled for a general unknown command" time="0.001165041">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /tools command &gt; should show an error if tool registry is not available" time="0.001263959">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /tools command &gt; should show an error if getAllTools returns undefined" time="0.000863417">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /tools command &gt; should display only Gemini CLI tools (filtering out MCP tools)" time="0.000842709">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /tools command &gt; should display a message when no Gemini CLI tools are available" time="0.001414459">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /tools command &gt; should display tool descriptions when /tools desc is used" time="0.001022042">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should show an error if tool registry is not available" time="0.001123375">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should display a message with a URL when no MCP servers are configured in a sandbox" time="0.000942291">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should display a message and open a URL when no MCP servers are configured outside a sandbox" time="0.001787375">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should display configured MCP servers with status indicators and their tools" time="0.003968083">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should display tool descriptions when showToolDescriptions is true" time="0.00145225">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should indicate when a server has no tools" time="0.001560917">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp command &gt; should show startup indicator when servers are connecting" time="0.001464125">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /mcp schema &gt; should display tool schemas and descriptions" time="0.001417125">
        </testcase>
        <testcase classname="src/ui/hooks/slashCommandProcessor.test.ts" name="useSlashCommandProcessor &gt; /compress command &gt; should call tryCompressChat(true)" time="0.002295917">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useAutoAcceptIndicator.test.ts" timestamp="2025-07-17T20:01:51.805Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.017277333">
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should initialize with ApprovalMode.AUTO_EDIT if config.getApprovalMode returns ApprovalMode.AUTO_EDIT" time="0.007761917">
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should initialize with ApprovalMode.DEFAULT if config.getApprovalMode returns ApprovalMode.DEFAULT" time="0.001219917">
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should initialize with ApprovalMode.YOLO if config.getApprovalMode returns ApprovalMode.YOLO" time="0.00128275">
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should toggle the indicator and update config when Shift+Tab or Ctrl+Y is pressed" time="0.003192">
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should not toggle if only one key or other keys combinations are pressed" time="0.001896083">
        </testcase>
        <testcase classname="src/ui/hooks/useAutoAcceptIndicator.test.ts" name="useAutoAcceptIndicator &gt; should update indicator when config value changes externally (useEffect dependency)" time="0.000941">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.integration.test.ts" timestamp="2025-07-17T20:01:51.806Z" hostname="Alexanders-MacBook-Pro.local" tests="21" failures="0" errors="0" skipped="0" time="1.701210375">
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should filter git-ignored entries from @ completions" time="0.161657375">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should filter git-ignored directories from @ completions" time="0.152279583">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should handle recursive search with git-aware filtering" time="0.153462875">
            <system-err>
Error fetching completion suggestions for t: Cannot read properties of undefined (reading &apos;map&apos;)

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should not perform recursive search when disabled in config" time="0.153176334">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should work without config (fallback behavior)" time="0.153480167">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should handle git discovery service initialization failure gracefully" time="0.1524545">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should handle directory-specific completions with git filtering" time="0.152475125">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should use glob for top-level @ completions when available" time="0.153347375">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should include dotfiles in glob search when input starts with a dot" time="0.15427475">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest top-level command names based on partial input" time="0.000840667">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest commands based on altName" time="0.00053975">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest sub-command names for a parent command" time="0.000559417">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest all sub-commands when the query ends with the parent command and a space" time="0.000704541">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should call the command.completion function for argument suggestions" time="0.1529645">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should not provide suggestions for a fully typed command that has no sub-commands or argument completion" time="0.001060458">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should not provide suggestions for an unknown command" time="0.000612333">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest sub-commands for a fully typed parent command without a trailing space" time="0.000568875">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should NOT provide suggestions for a perfectly typed command that is a leaf node" time="0.000766042">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should call command.completion with an empty string when args start with a space" time="0.153207458">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should suggest all top-level commands for the root slash" time="0.000858459">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.integration.test.ts" name="useCompletion git-aware filtering integration &gt; should provide no suggestions for an invalid sub-command" time="0.000591208">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useCompletion.test.ts" timestamp="2025-07-17T20:01:51.807Z" hostname="Alexanders-MacBook-Pro.local" tests="34" failures="0" errors="0" skipped="0" time="2.035883125">
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Hook initialization and state &gt; should initialize with default state" time="0.009489667">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Hook initialization and state &gt; should reset state when isActive becomes false" time="0.001895625">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Hook initialization and state &gt; should provide required functions" time="0.00223925">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; resetCompletionState &gt; should reset all state to default values" time="0.001381">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should handle navigateUp with no suggestions" time="0.001011208">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should handle navigateDown with no suggestions" time="0.000870084">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should navigate up through suggestions with wrap-around" time="0.001175667">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should navigate down through suggestions with wrap-around" time="0.001033333">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should handle navigation with multiple suggestions" time="0.006747458">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Navigation functions &gt; should handle navigation with large suggestion lists and scrolling" time="0.001013667">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should show all commands for root slash" time="0.001172875">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should filter commands by prefix" time="0.000716041">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should suggest commands by altName" time="0.000549834">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should not show suggestions for exact leaf command match" time="0.000544">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should show sub-commands for parent commands" time="0.00063775">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should show all sub-commands after parent command with space" time="0.00082225">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should filter sub-commands by prefix" time="0.00078375">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Slash command completion &gt; should handle unknown command gracefully" time="0.000667666">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Command argument completion &gt; should call completion function for command arguments" time="0.153981584">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Command argument completion &gt; should call completion function with partial argument" time="0.152812958">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Command argument completion &gt; should handle completion function that returns null" time="0.153746958">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File path completion (@-syntax) &gt; should show file completions for @ prefix" time="0.15215375">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File path completion (@-syntax) &gt; should filter files by prefix" time="0.153888459">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File path completion (@-syntax) &gt; should include hidden files when prefix starts with dot" time="0.15198325">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File path completion (@-syntax) &gt; should handle ENOENT error gracefully" time="0.156050917">
            <system-err>
Error fetching completion suggestions for nonexistent: Cannot read properties of undefined (reading &apos;map&apos;)

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File path completion (@-syntax) &gt; should handle other errors by resetting state" time="0.154094708">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Debouncing &gt; should debounce file completion requests" time="0.154849125">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Query handling edge cases &gt; should handle empty query" time="0.00173925">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Query handling edge cases &gt; should handle query without slash or @" time="0.001275666">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Query handling edge cases &gt; should handle query with whitespace" time="0.000702208">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Query handling edge cases &gt; should handle @ at the end of query" time="0.152387917">
            <system-err>
Error fetching completion suggestions for : entries is not iterable

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; File sorting behavior &gt; should prioritize source files over test files with same base name" time="0.154837458">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Config and FileDiscoveryService integration &gt; should work without config" time="0.152635291">
        </testcase>
        <testcase classname="src/ui/hooks/useCompletion.test.ts" name="useCompletion &gt; Config and FileDiscoveryService integration &gt; should respect file filtering when config is provided" time="0.154430459">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useConsoleMessages.test.ts" timestamp="2025-07-17T20:01:51.808Z" hostname="Alexanders-MacBook-Pro.local" tests="9" failures="0" errors="0" skipped="0" time="0.019708625">
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should initialize with an empty array of console messages" time="0.008300959">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should add a new message" time="0.001982666">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should consolidate identical consecutive messages" time="0.002603167">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should not consolidate different messages" time="0.001136">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should not consolidate messages if type is different" time="0.001383292">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear console messages" time="0.00094075">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear pending timeout on clearConsoleMessages" time="0.000782625">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should clear message queue on clearConsoleMessages" time="0.000485">
        </testcase>
        <testcase classname="src/ui/hooks/useConsoleMessages.test.ts" name="useConsoleMessages &gt; should cleanup timeout on unmount" time="0.001117583">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useEditorSettings.test.ts" timestamp="2025-07-17T20:01:51.808Z" hostname="Alexanders-MacBook-Pro.local" tests="10" failures="0" errors="0" skipped="0" time="0.020830875">
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should initialize with dialog closed" time="0.007656375">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should open editor dialog when openEditorDialog is called" time="0.001650792">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should close editor dialog when exitEditorDialog is called" time="0.002311375">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should handle editor selection successfully" time="0.00275575">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should handle clearing editor preference (undefined editor)" time="0.001432875">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should handle different editor types" time="0.000934042">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should handle different setting scopes" time="0.000620666">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should not set preference for unavailable editors" time="0.000808666">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should not set preference for editors not allowed in sandbox" time="0.001141875">
        </testcase>
        <testcase classname="src/ui/hooks/useEditorSettings.test.ts" name="useEditorSettings &gt; should handle errors during editor selection" time="0.000558375">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGeminiStream.test.tsx" timestamp="2025-07-17T20:01:51.809Z" hostname="Alexanders-MacBook-Pro.local" tests="22" failures="0" errors="0" skipped="0" time="0.115540958">
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should merge multiple PartListUnion arrays" time="0.00101575">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should handle empty arrays in the input list" time="0.000137042">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should handle a single PartListUnion array" time="0.0000515">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should return an empty array if all input arrays are empty" time="0.000087041">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should handle input list being empty" time="0.00008175">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should correctly merge when PartListUnion items are single Parts not in arrays" time="0.000058667">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should handle a mix of arrays and single parts, including empty arrays and undefined/null parts if they were possible (though PartListUnion typing restricts this)" time="0.000054916">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should preserve the order of parts from the input arrays" time="0.000047209">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="mergePartListUnions &gt; should handle cases where some PartListUnion items are single Parts and others are arrays of Parts" time="0.000190125">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; should not submit tool responses if not all tool calls are completed" time="0.008112583">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; should submit tool responses when all tool calls are completed and ready" time="0.00742325">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; should handle all tool calls being cancelled" time="0.005268833">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; should group multiple cancelled tool call responses into a single history entry" time="0.003480958">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; should not flicker streaming state to Idle between tool completion and submission" time="0.004662542">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; User Cancellation &gt; should cancel an in-progress stream when escape is pressed" time="0.005476292">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; User Cancellation &gt; should not do anything if escape is pressed when not responding" time="0.0012965">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; User Cancellation &gt; should prevent further processing after cancellation" time="0.053891125">
            <system-err>
An update to TestComponent inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() =&gt; {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you&apos;re testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

            </system-err>
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; User Cancellation &gt; should not cancel if a tool call is in progress (not just responding)" time="0.00155675">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; Slash Command Handling &gt; should schedule a tool call when the command processor returns a schedule_tool action" time="0.003555333">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; Slash Command Handling &gt; should stop processing and not call Gemini when a command is handled without a tool call" time="0.004886833">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; Memory Refresh on save_memory &gt; should call performMemoryRefresh when a save_memory tool call completes successfully" time="0.005281916">
        </testcase>
        <testcase classname="src/ui/hooks/useGeminiStream.test.tsx" name="useGeminiStream &gt; Error Handling &gt; should call parseAndFormatApiError with the correct authType on stream initialization failure" time="0.007664125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useGitBranchName.test.ts" timestamp="2025-07-17T20:01:51.810Z" hostname="Alexanders-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="2" time="0.020732417">
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return branch name" time="0.011340875">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return undefined if git command fails" time="0.001928167">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return short commit hash if branch is HEAD (detached state)" time="0.001745833">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should return undefined if branch is HEAD and getting commit hash fails" time="0.001202">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should update branch name when .git/HEAD changes" time="0.000365833">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should handle watcher setup error silently" time="0.002915958">
        </testcase>
        <testcase classname="src/ui/hooks/useGitBranchName.test.ts" name="useGitBranchName &gt; should cleanup watcher on unmount" time="0.000361208">
            <skipped/>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useHistoryManager.test.ts" timestamp="2025-07-17T20:01:51.810Z" hostname="Alexanders-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.023575958">
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should initialize with an empty history" time="0.00728525">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should add an item to history with a unique ID" time="0.00213125">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should generate unique IDs for items added with the same base timestamp" time="0.001450334">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should update an existing history item" time="0.001043542">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should not change history if updateHistoryItem is called with a non-existent ID" time="0.002883333">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should clear the history" time="0.002080709">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should not add consecutive duplicate user messages" time="0.000950208">
        </testcase>
        <testcase classname="src/ui/hooks/useHistoryManager.test.ts" name="useHistoryManager &gt; should add duplicate user messages if they are not consecutive" time="0.000508833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useInputHistory.test.ts" timestamp="2025-07-17T20:01:51.810Z" hostname="Alexanders-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.01919825">
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; should initialize with historyIndex -1 and empty originalQueryBeforeNav" time="0.007417917">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; handleSubmit &gt; should call onSubmit with trimmed value and reset history" time="0.001726208">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; handleSubmit &gt; should not call onSubmit if value is empty after trimming" time="0.001412708">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should not navigate if isActive is false" time="0.000917333">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should not navigate if userMessages is empty" time="0.001640708">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should call onChange with the last message when navigating up from initial state" time="0.000986833">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should store currentQuery as originalQueryBeforeNav on first navigateUp" time="0.000928041">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateUp &gt; should navigate through history messages on subsequent navigateUp calls" time="0.000825625">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should not navigate if isActive is false" time="0.001171709">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should not navigate if historyIndex is -1 (not in history navigation)" time="0.00038775">
        </testcase>
        <testcase classname="src/ui/hooks/useInputHistory.test.ts" name="useInputHistory &gt; navigateDown &gt; should restore originalQueryBeforeNav when navigating down to initial state" time="0.000577">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useKeypress.test.ts" timestamp="2025-07-17T20:01:51.811Z" hostname="Alexanders-MacBook-Pro.local" tests="14" failures="0" errors="0" skipped="0" time="0.023275583">
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should not listen if isActive is false" time="0.007593417">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should listen for keypress when active" time="0.002165458">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should set and release raw mode" time="0.00152775">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should stop listening after being unmounted" time="0.000679208">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; should correctly identify alt+enter (meta key)" time="0.002210584">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should process a paste as a single event" time="0.000972708">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should handle keypress interspersed with pastes" time="0.000981125">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Modern Node (&gt;= v20)&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.001073375">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should process a paste as a single event" time="0.002281625">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should handle keypress interspersed with pastes" time="0.000813708">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Legacy Node (&lt; v20)&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.000404125">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should process a paste as a single event" time="0.00042125">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should handle keypress interspersed with pastes" time="0.00071675">
        </testcase>
        <testcase classname="src/ui/hooks/useKeypress.test.ts" name="useKeypress &gt; Paste Handling in &apos;Workaround Env Var&apos; &gt; should emit partial paste content if unmounted mid-paste" time="0.000439583">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useLoadingIndicator.test.ts" timestamp="2025-07-17T20:01:51.811Z" hostname="Alexanders-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.036307833">
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should initialize with default values when Idle" time="0.008319041">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reflect values when Responding" time="0.005839542">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should show waiting phrase and retain elapsedTime when WaitingForConfirmation" time="0.012529042">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reset elapsedTime and use a witty phrase when transitioning from WaitingForConfirmation to Responding" time="0.004129667">
        </testcase>
        <testcase classname="src/ui/hooks/useLoadingIndicator.test.ts" name="useLoadingIndicator &gt; should reset timer and phrase when streamingState changes from Responding to Idle" time="0.004612667">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/usePhraseCycler.test.ts" timestamp="2025-07-17T20:01:51.812Z" hostname="Alexanders-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.017117208">
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should initialize with the first witty phrase when not active and not waiting" time="0.00782375">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should show &quot;Waiting for user confirmation...&quot; when isWaiting is true" time="0.002067458">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should not cycle phrases if isActive is false and not waiting" time="0.001351167">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should cycle through witty phrases when isActive is true and not waiting" time="0.00136775">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should reset to a witty phrase when isActive becomes true after being false (and not waiting)" time="0.002347709">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should clear phrase interval on unmount when active" time="0.000457584">
        </testcase>
        <testcase classname="src/ui/hooks/usePhraseCycler.test.ts" name="usePhraseCycler &gt; should reset to a witty phrase when transitioning from waiting to active" time="0.000753417">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useShellHistory.test.ts" timestamp="2025-07-17T20:01:51.812Z" hostname="Alexanders-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.541842708">
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should initialize and read the history file from the correct path" time="0.061731833">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should handle a non-existent history file gracefully" time="0.054390958">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should add a command and write to the history file" time="0.106728">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should navigate history correctly with previous/next commands" time="0.054083666">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should not add empty or whitespace-only commands to history" time="0.052485958">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should truncate history to MAX_HISTORY_LENGTH (100)" time="0.104210916">
        </testcase>
        <testcase classname="src/ui/hooks/useShellHistory.test.ts" name="useShellHistory &gt; should move an existing command to the top when re-added" time="0.107284">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useTimer.test.ts" timestamp="2025-07-17T20:01:51.812Z" hostname="Alexanders-MacBook-Pro.local" tests="8" failures="0" errors="0" skipped="0" time="0.027451834">
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should initialize with 0" time="0.007955708">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should not increment time if isActive is false" time="0.0011835">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should increment time every second if isActive is true" time="0.002125917">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should reset to 0 and start incrementing when isActive becomes true from false" time="0.001074459">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should reset to 0 when resetKey changes while active" time="0.007611542">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should be 0 if isActive is false, regardless of resetKey changes" time="0.002966">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should clear timer on unmount" time="0.001097042">
        </testcase>
        <testcase classname="src/ui/hooks/useTimer.test.ts" name="useTimer &gt; should preserve elapsedTime when isActive becomes false, and reset to 0 when it becomes active again" time="0.00076875">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/hooks/useToolScheduler.test.ts" timestamp="2025-07-17T20:01:51.813Z" hostname="Alexanders-MacBook-Pro.local" tests="21" failures="0" errors="0" skipped="4" time="0.036419041">
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler in YOLO Mode &gt; should skip confirmation and execute tool directly when yoloMode is true" time="0.01393025">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; initial state should be empty" time="0.001391542">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should schedule and execute a tool call successfully" time="0.005371958">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle tool not found" time="0.003139333">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle error during shouldConfirmExecute" time="0.002867125">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle error during execute" time="0.001625625">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle tool requiring confirmation - approved" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle tool requiring confirmation - cancelled by user" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should handle live output updates" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should schedule and execute multiple tool calls" time="0.005364291">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="useReactToolScheduler &gt; should throw error if scheduling while already running" time="0">
            <skipped/>
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;validating&apos; (validating) correctly" time="0.00036275">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;awaiting_approval&apos; (awaiting_approval) correctly" time="0.000167458">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;scheduled&apos; (scheduled) correctly" time="0.000067833">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;executing&apos; (executing no live output) correctly" time="0.000063333">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;executing&apos; (executing with live output) correctly" time="0.000063">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;success&apos; (success) correctly" time="0.000063083">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;error&apos; (error tool not found) correctly" time="0.00006625">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;error&apos; (error tool execution failed) correctly" time="0.000058417">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map ToolCall with status &apos;cancelled&apos; (cancelled) correctly" time="0.000105417">
        </testcase>
        <testcase classname="src/ui/hooks/useToolScheduler.test.ts" name="mapToDisplay &gt; should map an array of ToolCalls correctly" time="0.000120583">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/MarkdownDisplay.test.tsx" timestamp="2025-07-17T20:01:51.813Z" hostname="Alexanders-MacBook-Pro.local" tests="14" failures="0" errors="0" skipped="0" time="0.124934792">
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nothing for empty text" time="0.008186708">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a simple paragraph" time="0.004593666">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders headers with correct levels" time="0.002955083">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block with a language" time="0.010435041">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders a fenced code block without a language" time="0.069455584">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles unclosed (pending) code blocks" time="0.001899209">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders unordered lists with different markers" time="0.001276958">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders nested unordered lists" time="0.001545916">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders ordered lists" time="0.002711542">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders horizontal rules" time="0.001204375">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; renders tables correctly" time="0.003732375">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; handles a table at the end of the input" time="0.001047375">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; inserts a single space between paragraphs" time="0.000682416">
        </testcase>
        <testcase classname="src/ui/utils/MarkdownDisplay.test.tsx" name="&lt;MarkdownDisplay /&gt; &gt; correctly parses a mix of markdown elements" time="0.014116833">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/clipboardUtils.test.ts" timestamp="2025-07-17T20:01:51.814Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.115268917">
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return false on non-macOS platforms" time="0.000722458">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; clipboardHasImage &gt; should return boolean on macOS" time="0.105633875">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should return null on non-macOS platforms" time="0.000136541">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; saveClipboardImage &gt; should handle errors gracefully" time="0.007189708">
            <system-err>
Error saving clipboard image: Error: ENOENT: no such file or directory, mkdir &apos;/invalid&apos;
[90m    at Proxy.mkdir (node:internal/fs/promises:853:10)[39m
    at saveClipboardImage [90m(/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/ui/utils/clipboardUtils.ts:52:5[90m)[39m
    at [90m/Users/alexanderhuth/Code/yelm/packages/cli/[39msrc/ui/utils/clipboardUtils.test.ts:50:22
    at file:///Users/alexanderhuth/Code/yelm/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20 {
  errno: [33m-2[39m,
  code: [32m&apos;ENOENT&apos;[39m,
  syscall: [32m&apos;mkdir&apos;[39m,
  path: [32m&apos;/invalid&apos;[39m
}

            </system-err>
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should not throw errors" time="0.00057425">
        </testcase>
        <testcase classname="src/ui/utils/clipboardUtils.test.ts" name="clipboardUtils &gt; cleanupOldClipboardImages &gt; should complete without errors on valid directory" time="0.000098916">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/computeStats.test.ts" timestamp="2025-07-17T20:01:51.814Z" hostname="Alexanders-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.003657792">
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should return 0 if totalRequests is 0" time="0.000928708">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateErrorRate &gt; should calculate the error rate correctly" time="0.000143458">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should return 0 if totalRequests is 0" time="0.00012075">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateAverageLatency &gt; should calculate the average latency correctly" time="0.00008625">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should return 0 if prompt tokens is 0" time="0.000093125">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="calculateCacheHitRate &gt; should calculate the cache hit rate correctly" time="0.000037417">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should return all zeros for initial empty metrics" time="0.000385958">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate API and tool time percentages" time="0.000151417">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate cache efficiency" time="0.000196291">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should correctly calculate success and agreement rates" time="0.000051416">
        </testcase>
        <testcase classname="src/ui/utils/computeStats.test.ts" name="computeSessionStats &gt; should handle division by zero gracefully" time="0.0000735">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/displayUtils.test.ts" timestamp="2025-07-17T20:01:51.815Z" hostname="Alexanders-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.00192975">
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return green for values &gt;= green threshold" time="0.000744958">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return yellow for values &lt; green and &gt;= yellow threshold" time="0.000117416">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return red for values &lt; yellow threshold" time="0.000111541">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; getStatusColor &gt; should return defaultColor for values &lt; yellow threshold when provided" time="0.000048291">
        </testcase>
        <testcase classname="src/ui/utils/displayUtils.test.ts" name="displayUtils &gt; Threshold Constants &gt; should have the correct values" time="0.000199167">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/errorParsing.test.ts" timestamp="2025-07-17T20:01:51.815Z" hostname="Alexanders-MacBook-Pro.local" tests="21" failures="0" errors="0" skipped="0" time="0.00350575">
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a valid API error JSON" time="0.000971667">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the default message" time="0.000250542">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the personal message" time="0.00013425">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with the vertex message" time="0.000090875">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should return the original message if it is not a JSON error" time="0.000032541">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should return the original message for malformed JSON" time="0.000041667">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle JSON that does not match the ApiError structure" time="0.000035708">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a nested API error" time="0.000105583">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a StructuredError" time="0.0001985">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 StructuredError with the vertex message" time="0.000099833">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle an unknown error type" time="0.000028083">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Free tier)" time="0.000078208">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a regular 429 API error with standard message for Google auth" time="0.000087875">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with generic quota exceeded message for Google auth" time="0.000062042">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should prioritize Pro quota message over generic quota message for Google auth" time="0.000098083">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Standard tier)" time="0.000082041">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a 429 API error with Pro quota exceeded message for Google auth (Legacy tier)" time="0.000062125">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should handle different Gemini 2.5 version strings in Pro quota exceeded errors" time="0.00007175">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should not match non-Pro models with similar version strings" time="0.0001045">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a generic quota exceeded message for Google auth (Standard tier)" time="0.000065417">
        </testcase>
        <testcase classname="src/ui/utils/errorParsing.test.ts" name="parseAndFormatApiError &gt; should format a regular 429 API error with standard message for Google auth (Standard tier)" time="0.000055458">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/formatters.test.ts" timestamp="2025-07-17T20:01:51.816Z" hostname="Alexanders-MacBook-Pro.local" tests="14" failures="0" errors="0" skipped="0" time="0.002992416">
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into KB" time="0.000779667">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into MB" time="0.000064542">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatMemoryUsage &gt; should format bytes into GB" time="0.000095417">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format milliseconds less than a second" time="0.000071458">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration of 0" time="0.000072042">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of seconds" time="0.000036042">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in seconds with one decimal place" time="0.000027709">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of minutes" time="0.000028375">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in minutes and seconds" time="0.000158292">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format an exact number of hours" time="0.000031792">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours and seconds" time="0.000066459">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should format a duration in hours, minutes, and seconds" time="0.00002425">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle large durations" time="0.000023875">
        </testcase>
        <testcase classname="src/ui/utils/formatters.test.ts" name="formatters &gt; formatDuration &gt; should handle negative durations" time="0.000022083">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/markdownUtilities.test.ts" timestamp="2025-07-17T20:01:51.816Z" hostname="Alexanders-MacBook-Pro.local" tests="7" failures="0" errors="0" skipped="0" time="0.002042708">
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should split at the last double newline if not in a code block" time="0.000854333">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if no safe split point is found" time="0.000085083">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should prioritize splitting at 

 over being at the very end of the string if the end is not in a code block" time="0.000103792">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if the only 

 is inside a code block and the end of content is not" time="0.00008475">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should correctly identify the last 

 even if it is followed by text not in a code block" time="0.000089375">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content is empty" time="0.000039459">
        </testcase>
        <testcase classname="src/ui/utils/markdownUtilities.test.ts" name="markdownUtilities &gt; findLastSafeSplitPoint &gt; should return content.length if content has no newlines and no code blocks" time="0.00007275">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/textUtils.test.ts" timestamp="2025-07-17T20:01:51.817Z" hostname="Alexanders-MacBook-Pro.local" tests="5" failures="0" errors="0" skipped="0" time="0.001952083">
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return true for a buffer containing a null byte" time="0.000866167">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a buffer containing only text" time="0.00008475">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for an empty buffer" time="0.000092292">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should return false for a null or undefined buffer" time="0.000084917">
        </testcase>
        <testcase classname="src/ui/utils/textUtils.test.ts" name="textUtils &gt; isBinary &gt; should only check the sample size" time="0.000069834">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/utils/updateCheck.test.ts" timestamp="2025-07-17T20:01:51.817Z" hostname="Alexanders-MacBook-Pro.local" tests="6" failures="0" errors="0" skipped="0" time="0.002836792">
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if package.json is missing" time="0.000825667">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if there is no update" time="0.000184">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return a message if a newer version is available" time="0.000227792">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is the same as the current version" time="0.000053667">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should return null if the latest version is older than the current version" time="0.000194791">
        </testcase>
        <testcase classname="src/ui/utils/updateCheck.test.ts" name="checkForUpdates &gt; should handle errors gracefully" time="0.000505375">
            <system-err>
Failed to check for updates: Error: test error

            </system-err>
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/MaxSizedBox.test.tsx" timestamp="2025-07-17T20:01:51.817Z" hostname="Alexanders-MacBook-Pro.local" tests="16" failures="0" errors="0" skipped="0" time="0.036021709">
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders children without truncation when they fit" time="0.011971458">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines when content exceeds maxHeight" time="0.001927166">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; hides lines at the end when content exceeds maxHeight and overflowDirection is bottom" time="0.001363208">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text that exceeds maxWidth" time="0.001670875">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles mixed wrapping and non-wrapping segments" time="0.003355792">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles words longer than maxWidth by splitting them" time="0.002368459">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; does not truncate when maxHeight is undefined" time="0.0005895">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden" time="0.000607625">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; shows plural &quot;lines&quot; when more than one line is hidden and overflowDirection is bottom" time="0.0030145">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; renders an empty box for empty children" time="0.00120675">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte unicode characters correctly" time="0.00102975">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; wraps text with multi-byte emoji characters correctly" time="0.000896458">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; accounts for additionalHiddenLinesCount" time="0.000979083">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; handles React.Fragment as a child" time="0.000869458">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the top" time="0.001697917">
        </testcase>
        <testcase classname="src/ui/components/shared/MaxSizedBox.test.tsx" name="&lt;MaxSizedBox /&gt; &gt; clips a long single text child from the bottom" time="0.001540125">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/shared/text-buffer.test.ts" timestamp="2025-07-17T20:01:51.818Z" hostname="Alexanders-MacBook-Pro.local" tests="73" failures="0" errors="0" skipped="0" time="0.060842417">
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; should return the initial state if state is undefined" time="0.0015775">
            <system-err>
Unknown action encountered: [object Object]

            </system-err>
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; set_text action &gt; should set new text and move cursor to the end" time="0.00033">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; set_text action &gt; should not create an undo snapshot if pushToUndo is false" time="0.000134042">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; insert action &gt; should insert a character" time="0.000264292">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; insert action &gt; should insert a newline" time="0.000116208">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; backspace action &gt; should remove a character" time="0.000064291">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; backspace action &gt; should join lines if at the beginning of a line" time="0.000139">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; undo/redo actions &gt; should undo and redo a change" time="0.000184958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="textBufferReducer &gt; create_undo_snapshot action &gt; should create a snapshot without changing state" time="0.000227209">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should initialize with empty text and cursor at (0,0) by default" time="0.007761959">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should initialize with provided initialText" time="0.001711083">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should initialize with initialText and initialCursorOffset" time="0.001603083">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should wrap visual lines" time="0.000832958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should wrap visual lines with multiple spaces" time="0.001309917">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should wrap visual lines even without spaces" time="0.000451167">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Initialization &gt; should initialize with multi-byte unicode characters and correct cursor offset" time="0.001398125">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Basic Editing &gt; insert: should insert a character and update cursor" time="0.000843">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Basic Editing &gt; insert: should insert text in the middle of a line" time="0.001240958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Basic Editing &gt; newline: should create a new line and move cursor" time="0.000571625">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Basic Editing &gt; backspace: should delete char to the left or merge lines" time="0.001115208">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Basic Editing &gt; del: should delete char to the right or merge lines" time="0.00062175">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Drag and Drop File Paths &gt; should prepend @ to a valid file path on insert" time="0.000527875">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Drag and Drop File Paths &gt; should not prepend @ to an invalid file path on insert" time="0.000528875">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Drag and Drop File Paths &gt; should handle quoted paths" time="0.00044125">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Drag and Drop File Paths &gt; should not prepend @ to short text that is not a path" time="0.000385625">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Shell Mode Behavior &gt; should not prepend @ to valid file paths when shellModeActive is true" time="0.000524416">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Shell Mode Behavior &gt; should not prepend @ to quoted paths when shellModeActive is true" time="0.000445791">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Shell Mode Behavior &gt; should behave normally with invalid paths when shellModeActive is true" time="0.000426541">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Shell Mode Behavior &gt; should behave normally with short text when shellModeActive is true" time="0.000362083">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Cursor Movement &gt; move: left/right should work within and across visual lines (due to wrapping)" time="0.001363583">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Cursor Movement &gt; move: up/down should preserve preferred visual column" time="0.001400666">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Cursor Movement &gt; move: home/end should go to visual line start/end" time="0.001079">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Visual Layout &amp; Viewport &gt; should wrap long lines correctly into visualLines" time="0.000470041">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Visual Layout &amp; Viewport &gt; should update visualScrollRow when visualCursor moves out of viewport" time="0.001243208">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Undo/Redo &gt; should undo and redo an insert operation" time="0.000597458">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Undo/Redo &gt; should undo and redo a newline operation" time="0.000652667">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Unicode Handling &gt; insert: should correctly handle multi-byte unicode characters" time="0.000437333">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Unicode Handling &gt; backspace: should correctly delete multi-byte unicode characters" time="0.000470333">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Unicode Handling &gt; move: left/right should treat multi-byte chars as single units for visual cursor" time="0.000515459">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should insert printable characters" time="0.000432958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle &quot;Enter&quot; key as newline" time="0.000356125">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle &quot;Backspace&quot; key" time="0.0004045">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle multiple delete characters in one input" time="0.003183375">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle inserts that contain delete characters " time="0.00077425">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle inserts with a mix of regular and delete characters " time="0.000545917">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle arrow keys for movement" time="0.000583167">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should strip ANSI escape codes when pasting text" time="0.000782459">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should handle VSCode terminal Shift+Enter as newline" time="0.000539166">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; handleInput &gt; should correctly handle repeated pasting of long text" time="0.009962958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should replace a single-line range with single-line text" time="0.00061825">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should replace a multi-line range with single-line text" time="0.000602209">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should delete a range when replacing with an empty string" time="0.000708208">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should handle replacing at the beginning of the text" time="0.000645792">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should handle replacing at the end of the text" time="0.000549833">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should handle replacing the entire buffer content" time="0.000507833">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should correctly replace with unicode characters" time="0.000472167">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; should handle invalid range by returning false and not changing text" time="0.000424833">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; replaceRange &gt; replaceRange: multiple lines with a single character" time="0.000447417">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Input Sanitization &gt; should strip ANSI escape codes from input" time="0.000366584">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Input Sanitization &gt; should strip control characters from input" time="0.000344709">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Input Sanitization &gt; should strip mixed ANSI and control characters from input" time="0.000389125">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Input Sanitization &gt; should not strip standard characters or newlines" time="0.000422333">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="useTextBuffer &gt; Input Sanitization &gt; should sanitize pasted text via handleInput" time="0.000378625">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should return [0,0] for offset 0" time="0.000042958">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle single line text" time="0.000072042">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle multi-line text" time="0.0001425">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle empty lines" time="0.000066708">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle text ending with a newline" time="0.000046333">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle text starting with a newline" time="0.000045625">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle empty string input" time="0.00003525">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle multi-byte unicode characters correctly" time="0.000080916">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle offset exactly at newline character" time="0.000037541">
        </testcase>
        <testcase classname="src/ui/components/shared/text-buffer.test.ts" name="offsetToLogicalPos &gt; should handle offset in the middle of a multi-byte character (should place at start of that char)" time="0.000042958">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/DiffRenderer.test.tsx" timestamp="2025-07-17T20:01:51.821Z" hostname="Alexanders-MacBook-Pro.local" tests="13" failures="0" errors="0" skipped="0" time="0.135257042">
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with correct language for new file with known extension" time="0.019897958">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file with unknown extension" time="0.071805459">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should call colorizeCode with null language for new file if no filename is provided" time="0.011515458">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render diff content for existing file (not calling colorizeCode directly for the whole block)" time="0.003093542">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle diff with only header and no changes" time="0.00116775">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should handle empty diff content" time="0.000409292">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should render a gap indicator for skipped lines" time="0.003590208">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should not render a gap indicator for small gaps (&lt;= MAX_CONTEXT_LINES_WITHOUT_GAP)" time="0.004267833">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height undefined" time="0.005211125">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 80 and height 6" time="0.002815958">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with multiple hunks and a gap indicator &gt; with terminalWidth 30 and height 6" time="0.003741375">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a diff with a SVN diff format" time="0.002119834">
        </testcase>
        <testcase classname="src/ui/components/messages/DiffRenderer.test.tsx" name="&lt;OverflowProvider&gt;&lt;DiffRenderer /&gt;&lt;/OverflowProvider&gt; &gt; should correctly render a new file with no file extension correctly" time="0.004261208">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolConfirmationMessage.test.tsx" timestamp="2025-07-17T20:01:51.822Z" hostname="Alexanders-MacBook-Pro.local" tests="2" failures="0" errors="0" skipped="0" time="0.020247125">
        <testcase classname="src/ui/components/messages/ToolConfirmationMessage.test.tsx" name="ToolConfirmationMessage &gt; should not display urls if prompt and url are the same" time="0.015724666">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolConfirmationMessage.test.tsx" name="ToolConfirmationMessage &gt; should display urls if prompt and url are different" time="0.003527542">
        </testcase>
    </testsuite>
    <testsuite name="src/ui/components/messages/ToolMessage.test.tsx" timestamp="2025-07-17T20:01:51.822Z" hostname="Alexanders-MacBook-Pro.local" tests="11" failures="0" errors="0" skipped="0" time="0.042870167">
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders basic tool information" time="0.014045833">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ✔ for Success status" time="0.002557084">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows o for Pending status" time="0.00352125">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows ? for Confirming status" time="0.004171709">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows - for Canceled status" time="0.001878417">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows x for Error status" time="0.00563975">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is Idle" time="0.001321417">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows paused spinner for Executing status when streamingState is WaitingForConfirmation" time="0.001268125">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; ToolStatusIndicator rendering &gt; shows MockRespondingSpinner for Executing status when streamingState is Responding" time="0.00437475">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders DiffRenderer for diff results" time="0.001125042">
        </testcase>
        <testcase classname="src/ui/components/messages/ToolMessage.test.tsx" name="&lt;ToolMessage /&gt; &gt; renders emphasis correctly" time="0.001953458">
        </testcase>
    </testsuite>
</testsuites>
